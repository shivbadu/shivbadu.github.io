<feed xmlns="http://www.w3.org/2005/Atom"> <id>http://shivrajbadu.com.np/</id><title>Let's code</title><subtitle>This blog provides you the articles about various topics on various programming language.</subtitle> <updated>2023-12-25T13:25:11+05:45</updated> <author> <name>Shivraj Badu</name> <uri>http://shivrajbadu.com.np/</uri> </author><link rel="self" type="application/atom+xml" href="http://shivrajbadu.com.np/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="http://shivrajbadu.com.np/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> Â© 2023 Shivraj Badu </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Ruby find_all vs. select</title><link href="http://shivrajbadu.com.np/posts/ruby-find-all-vs-select/" rel="alternate" type="text/html" title="Ruby find_all vs. select" /><published>2022-08-15T10:40:18+05:45</published> <updated>2023-12-25T01:01:47+05:45</updated> <id>http://shivrajbadu.com.np/posts/ruby-find-all-vs-select/</id> <content src="http://shivrajbadu.com.np/posts/ruby-find-all-vs-select/" /> <author> <name>Shivraj Badu</name> </author> <category term="Ruby" /> <category term="select vs. find_all" /> <summary> About find_all vs. select Ruby method find_all or select returns an array which contains all elements of enum for which the given block returns a true value, and, if no block is given, an Enumerator is returned. Here are some examples: arr = 1..8 h = {a: 1, b: 2, c: 3, d: 4, e: 5, f: 6, g: 7, h: 8} arr.select{|x| x.even?} # =&amp;gt; [2, 4, 6, 8] a.find_all{|x| x.even?} # =&amp;gt; [2, 4, 6, 8] ... </summary> </entry> <entry><title>Webpacker in Rails6</title><link href="http://shivrajbadu.com.np/posts/rails6-webpacker/" rel="alternate" type="text/html" title="Webpacker in Rails6" /><published>2020-06-05T01:45:18+05:45</published> <updated>2023-12-25T01:01:47+05:45</updated> <id>http://shivrajbadu.com.np/posts/rails6-webpacker/</id> <content src="http://shivrajbadu.com.np/posts/rails6-webpacker/" /> <author> <name>Shivraj Badu</name> </author> <category term="Ruby on Rails" /> <category term="Webpacker" /> <summary> Webpacker Webpacker is the JavaScript compiler which compiles the JavaScript code. Prior to Rails6, JS code were inside app/assets/javascripts In Rails6, no app/assets/javascripts and have new dir app/javascript to load all the js files which has channels &amp;amp; packs and all Javascript components like Turbolinks, ActiveStorage, Rails-UJS, ActionCable support Webpacker. Other dir chann... </summary> </entry> <entry><title>Elastic Search with Chewy</title><link href="http://shivrajbadu.com.np/posts/elastic-search-with-chewy/" rel="alternate" type="text/html" title="Elastic Search with Chewy" /><published>2019-10-25T07:01:18+05:45</published> <updated>2023-12-25T01:01:47+05:45</updated> <id>http://shivrajbadu.com.np/posts/elastic-search-with-chewy/</id> <content src="http://shivrajbadu.com.np/posts/elastic-search-with-chewy/" /> <author> <name>Shivraj Badu</name> </author> <category term="Ruby on Rails" /> <category term="Elastic search Chewy" /> <summary> Chewy is one of the elastic search Ruby client. Chewy usages: Multi-model indices You can define several types for index one per indexed model. Every index is observable by all the related models. Most of the indexed models are related to other and it is necessary to denormalize this related data and put at the same object. Chewy is useful for example when we need index for ... </summary> </entry> <entry><title>Elastic Search</title><link href="http://shivrajbadu.com.np/posts/elastic-search/" rel="alternate" type="text/html" title="Elastic Search" /><published>2019-10-18T08:01:18+05:45</published> <updated>2023-12-25T01:01:47+05:45</updated> <id>http://shivrajbadu.com.np/posts/elastic-search/</id> <content src="http://shivrajbadu.com.np/posts/elastic-search/" /> <author> <name>Shivraj Badu</name> </author> <category term="Ruby on Rails" /> <category term="Elastic search" /> <summary> Introduction to Elastic Search Elastic Search is a full-text search engine which can be used as NoSQL database and can be used as analytics engine. It is schema-less, easy to scale, near real-time and provides a restful interface for different operations. Elastic search is used as primary backend of your web application which can be added to an existing system which run through existing data ... </summary> </entry> <entry><title>Elastic Search with Searchkick</title><link href="http://shivrajbadu.com.np/posts/elastic-search-with-searchkick/" rel="alternate" type="text/html" title="Elastic Search with Searchkick" /><published>2019-10-18T08:01:18+05:45</published> <updated>2023-12-25T01:01:47+05:45</updated> <id>http://shivrajbadu.com.np/posts/elastic-search-with-searchkick/</id> <content src="http://shivrajbadu.com.np/posts/elastic-search-with-searchkick/" /> <author> <name>Shivraj Badu</name> </author> <category term="Ruby on Rails" /> <category term="Elastic search Searchkick" /> <summary> What is Searchkick? Searchkick is a smart and intillegent search engine Rubygems that creates quicker search results based on user search activity. Before using Searchkick make sure Elasticsearch is installed on your system. Steps to use Searchkick Create a Rails application rails new institutions -d postgres Generate the scaffold for Student rails g scaffold Student name:string... </summary> </entry> </feed>
